name: suglider_auth_build_image

on:
  push:
    branches:
      - 'feature/new-build-pipeline'
    tags:
      - 'v*.*'
  pull_request:
    types:
      - opened
    branches:
      - 'feature/new-build-pipeline'
  workflow_dispatch:
    inputs:
      enable_container_build:
        description: 'enable container as build environment'
        required: true
        default: true
        type: boolean

env:
  GO_BUILD_CMD: 'cmd'

jobs:
  compile:
    if: ${{ github.event.inputs.enable_container_build == 'false' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.19', '1.20', '1.21' ]
        exclude:
          - go-version: '1.19'
          - go-version: '1.20'
    steps:
      - uses: actions/checkout@v4
      - uses: olegtarasov/get-tag@v2.1.2
        id: tagName
        with:
          tagRegex: "v(.*)"
          tagRegexGroup: 1
      - name: Build Go Application ${{ matrix.go-version }}
        uses: ./.github/actions/compile-golang-program
        with:
          enable_container: true
          enable_cache: true
          go_build_cmd: ${{ env.GO_BUILD_CMD }}
          go_version: ${{ matrix.go-version }}
          application_version: ${{ steps.tagName.outputs.tag }}

  compile-container:
    if: ${{ github.event.inputs.enable_container_build == 'true' }}
    runs-on: ubuntu-latest
    container: golang:${{ matrix.go-version }}
    strategy:
      matrix:
        go-version: [ '1.19', '1.20', '1.21' ]
        exclude:
          - go-version: '1.19'
          - go-version: '1.20'
    steps:
      - uses: actions/checkout@v4
      - uses: olegtarasov/get-tag@v2.1.2
        id: tagName
        with:
          tagRegex: "v(.*)"
          tagRegexGroup: 1
      - name: Build Go Application ${{ matrix.go-version }}
        uses: ./.github/actions/compile-golang-program
        with:
          enable_container: true
          enable_cache: true
          go_build_cmd: ${{ env.GO_BUILD_CMD }}
          go_version: ${{ matrix.go-version }}
          application_version: ${{ steps.tagName.outputs.tag }}

  build-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build and Push docker image
        uses: ./.github/actions/build-and-push-image
        with:
          auto_image_tag: 'true'
